<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!--arg name="world_name" value="$(find abby_gazebo)/worlds/abby.world"/-->
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
	 command="$(find xacro)/xacro --inorder '$(find irb140_description)/urdf/irb140.xacro'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model irb140 -param robot_description"/>


<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher"/>

<node pkg="rviz" type="rviz" name="rviz" args="-d $(find irb140_description)/rviz/irb140.rviz"/> 

  <!-- ros_control launch file -->
  <include file="$(find irb140_control)/launch/irb140_control.launch">
 </include>
  <!-- static transforms -->
  <include file="$(find irb140_planner)/launch/irb140_static_transforms.launch">
 </include>  

  <!-- start up cartesian action  server -->
  <node name = "irb140_cart_move_as" pkg = "irb140_planner" type = "irb140_cart_move_as" output= "screen"/>

<node name="spawn_sdf" pkg="gazebo_ros" type="spawn_model" args="-file $(find exmpl_models)/toy_block/toy_block.sdf -sdf -model toy_block -x 0.5 -y 0.0 -z 0.01 -Y 1.0" />

  <include file="$(find example_opencv)/launch/find_block.launch">
  </include>

</launch>
